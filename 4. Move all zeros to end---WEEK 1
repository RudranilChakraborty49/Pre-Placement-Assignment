QUESTION:

Move All Zeroes to End
Difficulty: EasyAccuracy: 45.51%Submissions: 358K+Points: 2Average Time: 15m
You are given an array arr[] of non-negative integers. Your task is to move all the zeros in the array to the right end while maintaining the relative order of the non-zero elements. The operation must be performed in place, meaning you should not use extra space for another array.

Examples:

Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.
Input: arr[] = [10, 20, 30]
Output: [10, 20, 30]
Explanation: No change in array as there are no 0s.
Input: arr[] = [0, 0]
Output: [0, 0]
Explanation: No change in array as there are all 0s.
Constraints:
1 ≤ arr.size() ≤ 105
0 ≤ arr[i] ≤ 105

ANSWER:

C:

void pushZerosToEnd(int arr[], int n) {
    int pos = 0; // index to place the next non-zero element

    for (int i = 0; i < n; i++) {
        if (arr[i] != 0) {
            // Swap non-zero to current pos
            int temp = arr[i];
            arr[i] = arr[pos];
            arr[pos] = temp;
            pos++;
        }
    }
}

PYTHON:

class Solution:
    def pushZerosToEnd(self, arr):
        n = len(arr)
        pos = 0  # Next position for non-zero element

        for i in range(n):
            if arr[i] != 0:
                arr[pos], arr[i] = arr[i], arr[pos]
                pos += 1
